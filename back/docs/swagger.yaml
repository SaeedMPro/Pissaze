definitions:
  dto.CompatibleRequest:
    properties:
      filter_list_category:
        items:
          $ref: '#/definitions/models.CategoryProductEnum'
        type: array
      product_id:
        items:
          type: integer
        type: array
    type: object
  dto.DiscountRespond:
    properties:
      discount_code:
        items:
          $ref: '#/definitions/models.PrivateCode'
        type: array
      number_of_discount_code:
        type: integer
    type: object
  dto.ErrorResponse:
    properties:
      error:
        example: error message
        type: string
      success:
        example: false
        type: boolean
    type: object
  dto.LoginRequest:
    properties:
      phone_number:
        type: string
    required:
    - phone_number
    type: object
  dto.LoginRespond:
    properties:
      is_vip:
        type: boolean
      token:
        type: string
    type: object
  dto.ProductList:
    properties:
      productList:
        items: {}
        type: array
      size:
        type: integer
    type: object
  dto.SuccessResponse:
    properties:
      data: {}
      message:
        example: message
        type: string
      success:
        example: true
        type: boolean
    type: object
  models.AddressOfClient:
    properties:
      client_id:
        type: integer
      province:
        type: string
      remain_address:
        type: string
    type: object
  models.CartStatusEnum:
    enum:
    - locked
    - blocked
    - active
    type: string
    x-enum-varnames:
    - CartStatusLocked
    - CartStatusBlocked
    - CartStatusActive
  models.CategoryProductEnum:
    enum:
    - Motherboard
    - CPU
    - GPU
    - RAM Stick
    - Cooler
    - Power Supply
    - Case
    - SSD
    - HDD
    type: string
    x-enum-varnames:
    - CategoryMotherboard
    - CategoryCPU
    - CategoryGPU
    - CategoryRAMStick
    - CategoryCooler
    - CategoryPowerSupply
    - CategoryCase
    - CategorySSD
    - CategoryHDD
  models.Client:
    properties:
      addresses:
        items:
          $ref: '#/definitions/models.AddressOfClient'
        type: array
      client_id:
        type: integer
      first_name:
        type: string
      last_name:
        type: string
      number_of_referred:
        type: integer
      phone_number:
        type: string
      referral_code:
        type: string
      timestamp:
        type: string
      wallet_balance:
        type: number
    type: object
  models.DiscountEnum:
    enum:
    - public
    - private
    type: string
    x-enum-varnames:
    - DiscountPublic
    - DiscountPrivate
  models.LockedShoppingCart:
    properties:
      locked_cart_number:
        type: integer
      products:
        items:
          $ref: '#/definitions/models.ProductShoppingCart'
        type: array
      shopping_cart:
        $ref: '#/definitions/models.ShoppingCart'
      timestamp:
        type: string
      total_price:
        type: number
    type: object
  models.PrivateCode:
    properties:
      amount:
        type: number
      client_id:
        type: integer
      code:
        type: integer
      code_type:
        $ref: '#/definitions/models.DiscountEnum'
      discount_limit:
        type: number
      expiration_time:
        type: string
      timestamp:
        type: string
      usage_limit:
        type: integer
    type: object
  models.Product:
    properties:
      brand:
        type: string
      category:
        type: string
      current_price:
        type: integer
      id:
        type: integer
      model:
        type: string
      product_image:
        items:
          type: integer
        type: array
      stock_count:
        type: integer
    type: object
  models.ProductShoppingCart:
    properties:
      cart_price:
        type: number
      product:
        $ref: '#/definitions/models.Product'
      quantity:
        type: integer
    type: object
  models.ShoppingCart:
    properties:
      cart_number:
        type: integer
      cart_status:
        $ref: '#/definitions/models.CartStatusEnum'
      client_id:
        type: integer
    type: object
host: localhost:8082
info:
  contact:
    email: mzahry36@gmail.com, dankeshavarz1075@gmail.com
    name: Saeed, Danny
  description: API for managing products, and users in a hardware shopping site.
  title: Pissaze
  version: "1.0"
paths:
  /api/client/:
    get:
      description: Retrieve client details using JWT token
      produces:
      - application/json
      responses:
        "200":
          description: Client retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Client'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get client information
      tags:
      - client
  /api/client/discountCode:
    get:
      description: Retrieve all active discount codes for the client
      produces:
      - application/json
      responses:
        "200":
          description: Discount codes retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.DiscountRespond'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get client's discount codes
      tags:
      - client
  /api/client/lockCart:
    get:
      description: Retrieve summary of locked carts within specified days
      parameters:
      - description: Number of days to look back (default 5)
        in: query
        name: days
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Locked carts retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.LockedShoppingCart'
                  type: array
              type: object
        "400":
          description: Invalid days parameter
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get locked cart summary
      tags:
      - client
  /api/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.LoginRespond'
              type: object
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: User login
      tags:
      - auth
  /api/product/compatible:
    post:
      consumes:
      - application/json
      description: Get products compatible with specified items
      parameters:
      - description: Product IDs and filters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CompatibleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Product'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Find compatible products
      tags:
      - products
  /api/product/list:
    get:
      description: Get filtered list of products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.ProductList'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: List products
      tags:
      - products
securityDefinitions:
  ApiKeyAuth:
    description: Type "Bearer" followed by a space and JWT token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
